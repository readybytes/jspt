../packages/tmp/admin/jax.xipt.php:43:		$func		= $_REQUEST['func'];
../packages/tmp/languages/admin/en-GB.com_xipt.ini:134:COM_XIPT_PREVENT_THESE_USERNAMES_FROM_GETTING_REGISTERED="Prevent these usernames from getting registered"
../packages/tmp/languages/admin/en-GB.com_xipt.ini:139:COM_XIPT_PREVENT_THESE_USERNAMES_FROM_GETTING_REGISTERED="Blocked Usernames"
../packages/tmp/languages/admin/en-GB.com_xipt.ini:140:COM_XIPT_PREVENT_THESE_USERNAMES_FROM_GETTING_REGISTERED_DESC="Prevent these usernames from getting registered. Separate each one by ; character. Use * as wildcard. For example, you might want to deny usernames like webmaster; admin; info etc. You can use an asterisk (*) as a wildcard, so *webmaster* would block webmaster as well as thewebmaster, webmasters and so forth"
../packages/tmp/languages/admin/en-GB.com_xipt.ini:141:COM_XIPT_ALLOW_ONLY_THESE_EMAIL_ADDRESSES_TO_GET_REGISTERED="Allowed email addresses" 
../packages/tmp/languages/admin/en-GB.com_xipt.ini:142:COM_XIPT_ALLOW_ONLY_THESE_EMAIL_ADDRESSES_TO_GET_REGISTERED_DESC="Allow only these email addresses to get registered. Separate each one by ; character. Use * as wildcard. You can limit which email addresses that can be registered. For example, a company can set up a site where only its own employees can register by specifying *@mycompany.com; *@joomlaxi.com"
../packages/tmp/languages/admin/en-GB.com_xipt.ini:143:COM_XIPT_BLOCK_THESE_EMAIL_ADDRESSES_TO_GET_REGISTERED="Blocked email addresses" 
../packages/tmp/languages/admin/en-GB.com_xipt.ini:144:COM_XIPT_BLOCK_THESE_EMAIL_ADDRESSES_TO_GET_REGISTERED_DESC="Block only these email addresses to get registered. Separate each one by ; character. Use * as wildcard. For example, you might want to deny unwanted email addresses that can be registered by specifying *@abccompany.com; *@xyz.com"
../packages/tmp/languages/admin/en-GB.com_xipt.ini:145:COM_XIPT_ALLOW_ONLY_THESE_EMAIL_ADDRESSES_TO_GET_REGISTERED="Allowed Email addresses"  
../packages/tmp/languages/site/en-GB.com_xipt.ini:8:COM_XIPT_YOUR_SESSION_HAVE_BEEN_EXPIRED_PLEASE_PERFORM_THE_OPERATION_AGAIN="Your session has been expired, please perform the action again."
../packages/tmp/languages/site/en-GB.com_xipt.ini:20:COM_XIPT_SESSION_EXPIRED_NO_USER_EXIST="Session expired no valid user exist."
../packages/tmp/site/assets/xml/profiletypes.config.xml:8:			<param name="jspt_prevent_username" type="textarea" default="" label="PREVENT_THESE_USERNAMES_FROM_GETTING_REGISTERED" rows="3" cols="30" description="PREVENT_THESE_USERNAMES_FROM_GETTING_REGISTERED_DESC" />
../packages/tmp/site/assets/xml/profiletypes.config.xml:10:			<param name="jspt_allowed_email" type="textarea" default="" label="ALLOW_ONLY_THESE_EMAIL_ADDRESSES_TO_GET_REGISTERED" rows="3" cols="30" description="ALLOW_ONLY_THESE_EMAIL_ADDRESSES_TO_GET_REGISTERED_DESC" />
../packages/tmp/site/assets/xml/profiletypes.config.xml:11:			<param name="jspt_prevent_email" type="textarea" default="" label="BLOCK_THESE_EMAIL_ADDRESSES_TO_GET_REGISTERED" rows="3" cols="30" description="BLOCK_THESE_EMAIL_ADDRESSES_TO_GET_REGISTERED_DESC" />
../packages/tmp/site/helpers/profiletypes.php:295:		$msg 			= XiptText::_('YOUR_SESSION_HAVE_BEEN_EXPIRED_PLEASE_PERFORM_THE_OPERATION_AGAIN');
../packages/tmp/site/libraries/acl/redirect/redirect.php:54:		if(isset($_SERVER['HTTP_X_REQUESTED_WITH']) && !empty($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest')
../packages/tmp/site/libraries/acl/aecredirect/aecredirect.php:52:		if(isset($_SERVER['HTTP_X_REQUESTED_WITH']) && !empty($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest')
